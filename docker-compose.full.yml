services:
  # PostgreSQL database service
  postgres:
    image: 'postgres:14.2'
    container_name: fieldeyes-postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123456
      POSTGRES_DB: field_eyes
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
    networks:
      - fieldeyes-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis cache service
  redis:
    image: 'redis:alpine'
    container_name: fieldeyes-redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./db-data/redis/:/data
    networks:
      - fieldeyes-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  # Field Eyes API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fieldeyes-api
    ports:
      - "9004:9004"
    restart: always
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123456
      - DB_NAME=field_eyes
      - DSN=host=postgres port=5432 user=postgres password=postgres123456 dbname=field_eyes sslmode=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=fieldeystuliSmartbalimi
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fieldeyes-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9004/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

networks:
  fieldeyes-network:
    driver: bridge 