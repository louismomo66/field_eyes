services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: fieldeyes-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123456
      POSTGRES_DB: field_eyes
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - fieldeyes-network

  # Redis Cache
  redis:
    image: redis:7
    container_name: fieldeyes-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fieldeyes-network

  # Mosquitto MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: fieldeyes-mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"  # MQTT
      - "9001:9001"  # WebSockets
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - fieldeyes-network

  # Field Eyes API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fieldeyes-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mosquitto:
        condition: service_started
    ports:
      - "9004:9004"
    environment:
      # Docker configuration
      - DOCKER_ENV=true
      - PORT=9004
      # Database configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123456
      - DB_NAME=field_eyes
      - DATABASE_URL=host=postgres port=5432 user=postgres password=postgres123456 dbname=field_eyes sslmode=disable timezone=UTC connect_timeout=5
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # MQTT configuration
      - MQTT_BROKER_URL=tcp://mosquitto:1883
      - MQTT_CLIENT_ID=field_eyes_server
      - MQTT_TOPIC_ROOT=field_eyes/devices
      # JWT and other settings
      - JWT_SECRET=fieldeystuliSmartbalimi
      - DEV_MODE=false
    networks:
      - fieldeyes-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Database Admin Tool
  pgadmin:
    image: dpage/pgadmin4
    container_name: fieldeyes-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fieldeyes.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - fieldeyes-network
      
  # Redis Admin Tool
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: fieldeyes-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - fieldeyes-network
      
  # MQTT Dashboard
  mqtt-dashboard:
    image: eclipse-mosquitto:2
    container_name: fieldeyes-mqtt-dashboard
    restart: unless-stopped
    command: sh -c "wget -O /tmp/mqtt-dashboard.js https://raw.githubusercontent.com/hui6075/mqtt-admin-panel/master/index.html && mkdir -p /mosquitto/www && mv /tmp/mqtt-dashboard.js /mosquitto/www/index.html && mosquitto_sub -h mosquitto -t '#' -v"
    volumes:
      - ./mqtt-dashboard:/mosquitto/www
    depends_on:
      - mosquitto
    ports:
      - "9002:9001"
    networks:
      - fieldeyes-network

networks:
  fieldeyes-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 