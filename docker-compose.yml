services:
  # Network initialization service
  init-network:
    image: busybox
    container_name: init-network
    command: >
      sh -c "ping -c 1 172.28.1.2 || true"
    networks:
      fieldeyes-network:
        ipv4_address: 172.28.1.10

  db:
    image: postgres:15
    container_name: fieldeyes-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123456
      POSTGRES_DB: field_eyes
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      fieldeyes-network:
        ipv4_address: 172.28.1.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: fieldeyes-app
    ports:
      - "9004:9004"
    depends_on:
      - init-network
      - db
    env_file:
      - .env
    networks:
      fieldeyes-network:
        ipv4_address: 172.28.1.4
    volumes:
      - ./debug-network.sh:/app/debug-network.sh
      - ./hosts.txt:/etc/hosts
    command: >
      bash -c "chmod +x /app/debug-network.sh && ./field_eyes_api"
    extra_hosts:
      - "fieldeyes-db:172.28.1.2"
      - "db:172.28.1.2"

  debug:
    build: .
    container_name: fieldeyes-debug
    depends_on:
      - init-network
      - db
    env_file:
      - .env
    networks:
      fieldeyes-network:
        ipv4_address: 172.28.1.5
    volumes:
      - ./debug-network.sh:/app/debug-network.sh
      - ./hosts.txt:/etc/hosts
    command: >
      bash -c "chmod +x /app/debug-network.sh && /app/debug-network.sh"
    extra_hosts:
      - "fieldeyes-db:172.28.1.2"
      - "db:172.28.1.2"

networks:
  fieldeyes-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1

volumes:
  pgdata: 