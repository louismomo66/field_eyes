services:
  api:
    build: .
    ports:
      - "9004:9004"
    environment:
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres123456}
      - DB_NAME=${DB_NAME:-field_eyes}
      - DSN=${DSN:-host=${DB_HOST} port=${DB_PORT} user=${DB_USER} password=${DB_PASSWORD} dbname=${DB_NAME} sslmode=disable}
      - JWT_SECRET=${JWT_SECRET:-fieldeystuliSmartbalimi}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9004/health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    restart: always

  postgres:
    image: 'postgres:14.2'
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123456
      POSTGRES_DB: field_eyes
    ports:
      - "5434:5432"
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: 'redis:7'
    ports:
      - "6379:6379"
    volumes:
      - ./db-data/redis/:/data
    networks:
      - app-network
    restart: always

  mqtt:
    image: 'eclipse-mosquitto:2'
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./db-data/mqtt/:/mosquitto/data
      - ./db-data/mqtt/log/:/mosquitto/log
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
