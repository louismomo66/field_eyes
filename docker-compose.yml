version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "9004:9004"
    depends_on:
      - postgres
      - redis
      - mosquitto
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=field_eyes
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=${JWT_SECRET}
      - JWT_SECRETE=${JWT_SECRETE}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      - MQTT_BROKER_URL=tcp://mosquitto:1883
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - MQTT_CLIENT_ID=${MQTT_CLIENT_ID:-field_eyes_server}
      - MQTT_TOPIC_ROOT=${MQTT_TOPIC_ROOT:-field_eyes/devices}
    volumes:
      - ./:/app
    restart: unless-stopped
    networks:
      - field-eyes-network

  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=field_eyes
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - field-eyes-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - field-eyes-network
      
  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped
    networks:
      - field-eyes-network

volumes:
  postgres-data:
  redis-data:
  mosquitto-data:
  mosquitto-log:

networks:
  field-eyes-network:
    driver: bridge 