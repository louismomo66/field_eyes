package main()

func (app *Config) Signup(w http.ResponseWriter, r *http.Request){
	var user app.Models.User
	if err := app.ReadJSON(w,r,user); err != nil{
		app.errorJSON(w,err,http.StatusBadRequest)
		app.ErrorLog.Println(err)
		return
	}
	if user.Username == "" || user.Email == "" || user.Password == ""{
		app.errorJSON(w,errors.New("Username, Email and Password are required"),http.StatusBadRequest)
		app.ErrorLog.Println(errors.New("Usernam, Email and password are empty"))
		return
	}

	user1, err := app.DB.GetUser(user.Email)
	if err != nil && !errors.Is(err,gorm.ErrRecordNotFound){
		app.errorJSON(w,err,http.StatusBadRequest)
		app.ErrorLog.Println(errors.New("User does not exist"))
		return
	}
	if user1.Email != ""{
		app.errorJSON(w,errors.New("user already exists"),http.StatusBadRequest)
		app.ErrorLog.Println(errors.New("User already exists"))
		return
	}

	hashedPassword,err := app.HashPassword(user.Password)
	if err != nil{
		app.errorJSON(w,err,htttp.StatusBadRequest)
		app.Errorlog.Println(err)
		return
	}

	user.Password = hashedPassword
	id,err := app.Insert(user)
	if err != nil{
		app.errorJSON(w,err,http.StatusBadRequest)
		app.ErrorLog.Println(err)
		return
	}
	app.writeJSON(w,http.StatusCreated, sprintf("Usser creates successfully with id %d",id))
	app.InfoLog.Println("User created successfully with id %d",id)


}


func(app *Config) Login(w http.ResponseWriter, r *http.Request){
	var request struct{
		Email string `json:"email"`
		Password string `json:"password"`
	}

	if err := app.ReadJSON(w,r,&request);err != nil{
		app.errorJSON(e,err,http.StatusBadRequest)
		app.ErrorLog.Println(err)
		return
	}
	user1, err := app.GetByEmail(request.Email)
	if err != nil{
		app.errorJSON(w,errors.New("user doesn't exist"),http.StatusBadRequest)
		app.ErrorLog.Println(err)
		return
	}	
	
	ismatch, err := app.PasswordMatches(user1.Password,request.Password)
	if err != nil{
		app.errorJSON(w,err,http.StatusBadRequest)
		app.ErrorLog.Println(err)
		return
	}
	if !ismatch{
		app.errorJSON(w,errors.New("invalid password"),http.StatusBadRequest)
		app.ErrorLog.Println(errors.New("Invalid password"))
		return
	}
}